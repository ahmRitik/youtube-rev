"""Youtube video scrapper based on reversing youtube ,
first i went to embeded youtube url , there i find the api key which call
the server and get all the youtube video data in json format ,
i remmoved the unnessery headers and data call from script 
i am not sure whether it will still be working or not 
but now its working fine.
only used request library for get post request"""

import requests
import json
from collections import defaultdict

class YoutubeRev(object):

	__slots__ = ('videoId' , 'baseUrl', 'headers' , 'key' , 'payloadData' , 'jsonData')

	def __init__(self , videoId):
		self.videoId = videoId
		self.baseUrl = "https://www.youtube.com/youtubei/v1/player"
		self.headers = {
		'user-agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.96 Safari/537.36',
		'content-type': 'application/json',
		'referer': 'https://www.youtube.com/embed/'+self.videoId
		}
		"""This api key was generated by broswer , i think its reusable
			this worked for me lol not sure whether it will for you or not xD""" 
		self.key = "AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8"
		self.payloadData = {
			"videoId":self.videoId,
			"context": {
			    "client": {
				    #I literally don't know what shit is this , i tried filtering out this but did't worked out so i leave it at it is
				    #I think its dynamic not sure though maybe worked out for you too :)
			      "visitorData": "CgtRQ1VwRWtZTm9YayiG3OCABg%3D%3D",
			      "clientName": "WEB_EMBEDDED_PLAYER", #Too fool google that this is just a embedded video xD
			      "clientVersion": "20210126",
			    },
			},

			"cpn": "79JIqSkI_5iSwavl" #Another shit leave it at it is 
		}
		self.jsonData = dict(self._retriveJson())


	def _retriveJson(self):
		res = requests.post(self.baseUrl , headers=self.headers , params={"key":self.key} , json=self.payloadData)
		if res.status_code != 200:
			raise Exception("Failed to retrive data , check url or this script is dead lol")
		else:
			return res.json()

	def videoData(self):
		try:
			return self.jsonData['streamingData']
		except Exception:
			raise KeyError("Key is missing , failed to retrive ")

	def videoInfo(self):
		try:
			return self.jsonData["videoDetails"]
		except Exception:
			raise KeyError("Key is missing , failed to retrive ")


y1 = YoutubeRev("NUyXiiIGDTo")

import pprint
pprint.pprint(y1.videoData())



